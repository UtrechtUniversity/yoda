---
# copyright Utrecht University

- name: Check if iRODS microservices are installable from repository
  yum:
    list: "{{ item.value.package }}"
  with_dict: "{{ microservices }}"
  register: irods_microservices_repo


- name: Ensure iRODS 4.2.7 packages are absent
  package:
    name:
      - irods-uu-microservices-4.2.7_0.8.1-1
      - irods-uu-microservices-4.2.6_0.8.0-1
      - irods-sudo-microservices-4.2.7_1.0.0-1
      - irods-sudo-microservices-4.2.6_1.0.0-1
      - davrods-4.2.7_1.4.2-1
      - davrods-4.2.6_1.4.2-1
    state: absent



- name: Download iRODS microservice packages
  get_url:
    url: "{{ item.item.value.url }}"
    dest: "{{ rpm_dest_dir }}/{{ item.item.value.filename }}"
    checksum: "{{ item.item.value.checksum }}"
  when: not item.results and not repo_only
  with_items: "{{ irods_microservices_repo.results }}"


- name: Install iRODS microservice packages from downloaded rpm
  yum:
    name: "{{ rpm_dest_dir }}/{{ item.item.value.filename }}"
    state: present
  when: not item.results and not ansible_check_mode and not repo_only
  with_items: "{{ irods_microservices_repo.results }}"


- name: Ensure microservice packages from downloaded rpm
  yum:
    name: "{{ item.item.value.package }}"
    state: present
  when: not item.results and not ansible_check_mode
  with_items: "{{ irods_microservices_repo.results }}"


- name: Ensure available microservices are installed from repository
  package:
    name: "{{ item.value.package }}"
    state: present
  when: not ansible_check_mode
  with_dict: "{{ microservices }}"


- name: Undo the ownership modifications by the microservices installation
  file:
    path: "{{ item.directory }}"
    recurse: "{{ item.recursive }}"
    owner: "{{ irods_service_account }}"
    group: "{{ irods_service_account }}"
  with_items:
    - { directory: '/var/lib/irods', recursive: 'no' }
    - { directory: '/var/lib/irods/plugins', recursive: 'yes' }
