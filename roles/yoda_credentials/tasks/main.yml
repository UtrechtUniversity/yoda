---
# copyright Utrecht University

- name: Ensure that credentials store exists
  file:
    path: '{{ credentials_store }}'
    owner: '{{ irods_service_account }}'
    group: '{{ irods_service_account }}'
    mode: 0700
    state: directory
  when: not ansible_check_mode


- name: Configure credentials in credentials store
  template:
    src: store_config.j2
    dest: '{{ credentials_store }}/store_config.json'
    owner: '{{ irods_service_account }}'
    group: '{{ irods_service_account }}'
    mode: 0600
  when: not ansible_check_mode


- name: Ensure EPIC credentials are present in credentials store
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: '{{ irods_service_account }}'
    group: '{{ irods_service_account }}'
    mode: 0600
  with_items:
    - src: '{{ credential_files }}/epic_key.pem'
      dest: '{{ credentials_store }}/epic_key.pem'
    - src: '{{ credential_files }}/epic_cert.pem'
      dest: '{{ credentials_store }}/epic_cert.pem'
  when: >
    (credential_files != "PLACEHOLDER") and (epic_url != "PLACEHOLDER") and
    (epic_key == "PLACEHOLDER") and (epic_cert == "PLACEHOLDER") and not ansible_check_mode


- name: Ensure EPIC credentials are present in credentials store
  copy:
    content: '{{ item.src | b64decode }}'
    dest: '{{ item.dest }}'
    owner: '{{ irods_service_account }}'
    group: '{{ irods_service_account }}'
    mode: 0600
  with_items:
    - src: '{{ epic_key }}'
      dest: '{{ credentials_store }}/epic_key.pem'
    - src: '{{ epic_cert }}'
      dest: '{{ credentials_store }}/epic_cert.pem'
  when: (epic_url != "PLACEHOLDER") and (epic_key != "PLACEHOLDER") and (epic_cert != "PLACEHOLDER") and not ansible_check_mode
