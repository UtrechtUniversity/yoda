---
# copyright Utrecht University

- name: Install Yoda External User Service dependencies
  package:
    name:
      - php-pdo
      - php-pgsql
      - php-password-compat
      - php-PHPMailer
      - python-requests
    state: present


- name: Ensure yodadeployment user exists
  user:
    name: "{{ yoda_deployment_user }}"


- name: Ensure yodadeployment has access to /var/www/extuser
  file:
    path: /var/www/extuser
    state: directory
    owner: "{{ yoda_deployment_user }}"
    group: "{{ yoda_deployment_user }}"
    mode: 0711


- name: Checkout Yoda External User Service source
  become_user: "{{ yoda_deployment_user }}"
  become: yes
  git:
    repo: "https://github.com/UtrechtUniversity/yoda-external-user-service.git"
    dest: "/var/www/extuser/yoda-external-user-service"
    version: "{{ yoda_version }}"


- name: Link public directories of Yoda External User Service
  file:
    src: "/var/www/extuser/yoda-external-user-service/{{ item }}"
    dest: "/var/www/extuser/{{ item }}"
    state: link
  when: not ansible_check_mode
  with_items:
    - public
    - api


- name: Allow public to API port for External User Service in firewall
  firewalld:
    port: '8443/tcp'
    permanent: true
    state: enabled
    immediate: yes
  notify: Restart firewall


- name: Create Yoda External User Service database
  become_user: postgres
  become: yes
  postgresql_db:
    name: "{{ eus_db_name }}"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0


- name: Create Yoda External User Service database user
  become_user: postgres
  become: yes
  postgresql_user:
    db: "{{ eus_db_name }}"
    name: "{{ eus_db_user }}"
    password: "{{ eus_db_password }}"
    priv: ALL
  when: not ansible_check_mode


- name: Select all from example table
  become_user: postgres
  become: yes
  command: "psql -c \"SELECT 1 FROM {{ eus_db_user_table }}\" {{ eus_db_name }}"
  ignore_errors: true
  changed_when: false
  register: table_exists


- name: Create external users table
  become_user: postgres
  become: yes
  command: "psql -d {{ eus_db_name }} -f /var/www/extuser/yoda-external-user-service/aux/db.sql"
  when: not ansible_check_mode and table_exists.stderr


- name: Make sure database user has permissions on tables
  become_user: postgres
  become: yes
  postgresql_privs:
    database: "{{ eus_db_name }}"
    state: present
    privs: SELECT,INSERT,UPDATE,DELETE
    type: table
    roles: "{{ eus_db_user }}"
    objs: "{{ item }}"
    grant_option: yes
  with_items:
    - "{{ eus_db_user_table }}"
    - "{{ eus_db_user_zones_table }}"
  when: not ansible_check_mode


- name: Make sure database user has permissions on sequences
  become_user: postgres
  become: yes
  postgresql_privs:
    database: "{{ eus_db_name }}"
    state: present
    privs: USAGE
    type: sequence
    roles: "{{ eus_db_user }}"
    objs: "{{ eus_db_users_id_seq }}"
    grant_option: yes
  when: not ansible_check_mode


- name: Create config_local.php
  template:
    src: config_local.php.j2
    dest: /var/www/extuser/yoda-external-user-service/config_local.php
    owner: "{{ yoda_deployment_user }}"
    mode: 0644


- name: Ensure public .htaccess is configured
  copy:
    src: /var/www/extuser/yoda-external-user-service/public/.htaccess.template-{{ yoda_environment }}
    dest: /var/www/extuser/yoda-external-user-service/public/.htaccess
    remote_src: yes
  notify: Restart Apache webserver
  when: not ansible_check_mode


- name: Ensure API .htaccess is configured
  copy:
    src: /var/www/extuser/yoda-external-user-service/api/.htaccess.template-{{ yoda_environment }}
    dest: /var/www/extuser/yoda-external-user-service/api/.htaccess
    remote_src: yes
  notify: Restart Apache webserver
  when: not ansible_check_mode


- name: Copy Yoda External User Service virtual host config for Apache
  template:
    src: "yoda-external-user-service-vhost.conf.j2"
    dest: "/etc/httpd/conf.d/yoda-external-user-service-vhost.conf"
  notify: Restart Apache webserver
