---
# copyright Utrecht University

- name: Ensure davrods prerequisites are installed
  ansible.builtin.package:
    name:
      - boost
      - jansson
    state: present


- name: Check if davrods is installable from repository
  ansible.builtin.yum:
    list: '{{ davrods.package }}'
  register: davrods_repo


- name: Download davrods rpm
  ansible.builtin.get_url:
    url: '{{ davrods.url }}/{{ davrods.filename }}'
    dest: '{{ rpm_dest_dir }}/{{ davrods.filename }}'
    checksum: '{{ davrods.checksum }}'
    mode: 0644
  when: not davrods_repo.results and not repo_only


- name: Install davrods from downloaded rpm
  ansible.builtin.package:
    name: '{{ rpm_dest_dir }}/{{ davrods.filename }}'
    state: present
  when: not davrods_repo.results and not ansible_check_mode and not repo_only


- name: Ensure davrods rpm is installed
  ansible.builtin.package:
    name: '{{ davrods.package }}'
    state: present
  when: davrods_repo.results and not ansible_check_mode


- name: Allow Apache to execute davrods module
  community.general.sefcontext:
    target: /etc/httpd/modules/mod_davrods.so
    setype: httpd_sys_script_exec_t
    state: present
  register: filecontext
  when: ansible_selinux.status == "enabled"


- name: Ensure selinux context is enforced on davrods module
  ansible.builtin.command: restorecon /etc/httpd/modules/{{ item.target }}
  when: filecontext is changed and ansible_selinux
  with_items:
    - {index: 0, target: 'mod_davrods.so'}


- name: Allow DavRODS connections to iCAT server
  ansible.posix.seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true
  when: ansible_selinux.status == "enabled"


- name: Copy irods_environment.json to /etc/httpd/irods/irods_environment.json
  ansible.builtin.template:
    src: irods_environment.j2
    dest: /etc/httpd/irods/irods_environment.json
    owner: apache
    group: apache
    mode: 0644
  notify: Restart Apache webserver


- name: Copy davrods Apache configuration
  ansible.builtin.template:
    src: davrods-vhost.conf.j2
    dest: /etc/httpd/conf.d/davrods-vhost.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart Apache webserver


- name: Copy davrods anonymous Apache configuration
  when: (yoda_davrods_anonymous_enabled is not defined) or yoda_davrods_anonymous_enabled
  ansible.builtin.template:
    src: davrods-anonymous-vhost.conf.j2
    dest: /etc/httpd/conf.d/davrods-anonymous-vhost.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart Apache webserver


- name: Ensure webdav logfiles exist
  ansible.builtin.copy:
    content: ""
    dest: '{{ item }}'
    mode: 0644
    owner: root
    group: root
    force: false
  with_items:
    - /var/log/httpd/webdav_access.log
  notify: Restart Apache webserver

- name: Ensure webdav logfiles for anonymous access exist
  when: (yoda_davrods_anonymous_enabled is not defined) or yoda_davrods_anonymous_enabled
  ansible.builtin.copy:
    content: ""
    dest: '{{ item }}'
    mode: 0644
    owner: root
    group: root
    force: false
  with_items:
    - /var/log/httpd/webdav_anon_access.log
  notify: Restart Apache webserver


- name: Allow Apache to execute iRODS network plugins
  community.general.sefcontext:
    target: '{{ item }}'
    setype: httpd_sys_script_exec_t
    state: present
  register: filecontext
  with_items:
    - /usr/lib/irods/plugins/network/libtcp_client.so
    - /usr/lib/irods/plugins/network/libssl_client.so
    - /usr/lib/irods/plugins/network/libtcp_server.so
    - /usr/lib/irods/plugins/network/libssl_server.so
  when: ansible_selinux.status == "enabled"


- name: Ensure selinux context is enforced on iRODS network plugins
  ansible.builtin.command: restorecon /usr/lib/irods/plugins/network/{{ item.target }}
  when: filecontext.results[item.index] is changed and ansible_selinux
  with_items:
    - {index: 0, target: 'libtcp_client.so'}
    - {index: 1, target: 'libssl_client.so'}
    - {index: 2, target: 'libtcp_server.so'}
    - {index: 3, target: 'libssl_server.so'}


- name: Allow public to ports for davrods in firewall
  ansible.posix.firewalld:
    port: '{{ yoda_davrods_port }}/tcp'
    permanent: true
    state: enabled
    immediate: true
  notify: Restart firewall


- name: Allow Apache to listen to davrods port
  community.general.seport:
    ports: "{{ yoda_davrods_port }}"
    proto: tcp
    setype: http_port_t
    state: present


- name: Allow public to ports for anonymous davrods in firewall
  ansible.posix.firewalld:
    port: '{{ yoda_davrods_anonymous_port }}/tcp'
    permanent: true
    state: enabled
    immediate: true
  notify: Restart firewall


- name: Allow Apache to listen to anonymous davrods port
  community.general.seport:
    ports: "{{ yoda_davrods_anonymous_port }}"
    proto: tcp
    setype: http_port_t
    state: present


- name: Ensure styling of davrods directory listing is present
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '/etc/httpd/irods/{{ item.dest }}'
    owner: root
    group: root
    mode: 0644
  with_items:
    - {src: head.html.j2, dest: 'head.html'}
    - {src: header.html.j2, dest: 'header.html'}
    - {src: footer.html.j2, dest: 'footer.html'}
