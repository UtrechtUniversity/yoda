---
# copyright Utrecht University

- name: Include OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Ensure davrods prerequisites are installed
  ansible.builtin.package:
    name:
      - "{{ yoda_davrods_boost_package }}"
      - "{{ yoda_davrods_jansson_package }}"
    state: present


- name: Install DavRODS (EL)
  ansible.builtin.import_tasks: install-redhat.yml
  when: ansible_os_family == 'RedHat'


- name: Install DavRODS (Ubuntu)
  ansible.builtin.import_tasks: install-ubuntu.yml
  when: ansible_os_family == 'Debian'


- name: Setup SELinux for DavRODS (EL)
  ansible.builtin.import_tasks: setup-selinux.yml
  when: ansible_os_family == 'RedHat' and ansible_selinux.status == "enabled"


- name: Copy irods_environment.json to config directory
  ansible.builtin.template:
    src: irods_environment.j2
    dest: "{{ yoda_davrods_config_dir }}/irods_environment.json"
    owner: "{{ yoda_davrods_user }}"
    group: "{{ yoda_davrods_user }}"
    mode: '0644'
  notify: Restart Apache webserver


- name: Copy davrods Apache configuration
  ansible.builtin.template:
    src: davrods-vhost.conf.j2
    dest: "{{ yoda_davrods_site_config_dir }}/{{ yoda_davrods_config_file }}"
    owner: root
    group: root
    mode: '0644'
  notify: Restart Apache webserver


- name: Copy davrods anonymous Apache configuration
  when: (yoda_davrods_anonymous_enabled is not defined) or yoda_davrods_anonymous_enabled
  ansible.builtin.template:
    src: davrods-anonymous-vhost.conf.j2
    dest: "{{ yoda_davrods_site_config_dir }}/{{ yoda_davrods_anon_config_file }}"
    owner: root
    group: root
    mode: '0644'
  notify: Restart Apache webserver


- name: Ensure DavRODS virtual hosts are enabled (Ubuntu)
  ansible.builtin.file:
    src: "{{ yoda_davrods_site_config_dir }}//{{ item }}"
    dest: "{{ yoda_davrods_site_enabled_config_dir }}//{{ item }}"
    state: link
  notify: Restart Apache webserver
  with_items:
    - "{{ yoda_davrods_config_file }}"
    - "{{ yoda_davrods_anon_config_file }}"
  when: ansible_os_family == 'Debian'


- name: Ensure DavRODS-related modules are enabled (Ubuntu)
  ansible.builtin.file:
    src: "{{ yoda_davrods_module_config_dir }}/{{ item }}.load"
    dest: "{{ yoda_davrods_module_enabled_config_dir }}/{{ item }}.load"
    state: link
  notify: Restart Apache webserver
  with_items:
    - "dav"
    - "dav_fs"
    - "dav_lock"
    - "davrods"
  when: ansible_os_family == 'Debian'


- name: Ensure webdav logfiles exist
  ansible.builtin.copy:
    content: ""
    dest: '{{ item }}'
    mode: '0644'
    owner: root
    group: root
    force: false
  with_items:
    - "{{ yoda_davrods_apache_log_dir }}/webdav_access.log"
  notify: Restart Apache webserver


- name: Ensure webdav logfiles for anonymous access exist
  when: (yoda_davrods_anonymous_enabled is not defined) or yoda_davrods_anonymous_enabled
  ansible.builtin.copy:
    content: ""
    dest: '{{ item }}'
    mode: '0644'
    owner: root
    group: root
    force: false
  with_items:
    - "{{ yoda_davrods_apache_log_dir }}/webdav_anon_access.log"
  notify: Restart Apache webserver


- name: Allow public to ports for davrods in firewall
  ansible.posix.firewalld:
    port: '{{ yoda_davrods_port }}/tcp'
    permanent: true
    state: enabled
    immediate: true
  notify: Restart firewall


- name: Allow public to ports for anonymous davrods in firewall
  ansible.posix.firewalld:
    port: '{{ yoda_davrods_anonymous_port }}/tcp'
    permanent: true
    state: enabled
    immediate: true
  notify: Restart firewall


- name: Ensure styling of davrods directory listing is present
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ yoda_davrods_config_dir }}/{{ item.dest }}'
    owner: root
    group: root
    mode: '0644'
  with_items:
    - {src: head.html.j2, dest: 'head.html'}
    - {src: header.html.j2, dest: 'header.html'}
    - {src: footer.html.j2, dest: 'footer.html'}
