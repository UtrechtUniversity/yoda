---
# copyright Utrecht University

- name: Ensure Yoda test groups exists
  become_user: '{{ irods_service_account }}'
  become: yes
  yoda_addgroup:
    groupName: '{{ item.groupName }}'
    category: '{{ item.category }}'
    subcategory: '{{ item.subcategory }}'
    description: 'Auto-generated by Ansible'
    dataClassification: '{{ item.dataClassification }}'
  with_items: '{{ test_groups }}'


- name: Ensure Yoda users are added to groups
  become_user: '{{ irods_service_account }}'
  become: yes
  yoda_addgroupuser:
    groupName: '{{ item.groupName }}'
    user: '{{ item.user }}'
    role: '{{ item.role }}'
  with_items: '{{ test_groupusers }}'


- name: Ensure Yoda intake datamanager has read access to grp-vault-initial folder
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    ichmod -M read grp-datamanager-initial /{{ irods_zone }}/home/grp-vault-initial
  ignore_errors: true


- name: Ensure Yoda intake datamanager has read access to grp-vault-test folder
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    ichmod -M read grp-datamanager-test /{{ irods_zone }}/home/grp-vault-test
  ignore_errors: true


- name: Ensure Yoda test data directory research-initial/testdata is present in Yoda
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    imkdir /{{ irods_zone }}/home/research-initial/testdata
  ignore_errors: true


- name: Ensure Yoda test data directory is present
  become_user: '{{ irods_service_account }}'
  become: yes
  file:
    path: '~/testdata/'
    state: directory
    mode: 0755


- name: Ensure Yoda test data directory research-mdtest/nomdpresent is present in Yoda
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    imkdir /{{ irods_zone }}/home/research-mdtest/nomdpresent
  ignore_errors: true


- name: Ensure Yoda test data directory research-default-1/transformation is present in Yoda
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    imkdir /{{ irods_zone }}/home/research-default-1/transformation
  ignore_errors: true


- name: Ensure Yoda test data directory research-mdtest/invalidmetadata is present in Yoda
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    imkdir /{{ irods_zone }}/home/research-mdtest/invalidmetadata
  ignore_errors: true


- name: Ensure Yoda test data directory research-notpreservable/testdata is present in Yoda
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    imkdir /{{ irods_zone }}/home/research-notpreservable/testdata
  ignore_errors: true


- name: Ensure Yoda test data directory research-mdtest/copyfromparent is present in Yoda
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    imkdir /{{ irods_zone }}/home/research-mdtest/copyfromparent
  ignore_errors: true


- name: Ensure Yoda test files are present in VM
  become_user: '{{ irods_service_account }}'
  become: yes
  copy:
    src: '{{ item }}'
    dest: '~/testdata/{{ item }}'
    mode: 0644
  with_items:
    - 'lorem.txt'
    - 'SIPI_Jelly_Beans_4.1.07.tiff'


- name: Ensure Yoda test files are present in Yoda directory research-initial/testdata
  become_user: '{{ irods_service_account }}'
  become: yes
  shell:
    iput -f ~/testdata/{{ item }} /{{ irods_zone }}/home/research-initial/testdata
  with_items:
    - 'lorem.txt'
    - 'SIPI_Jelly_Beans_4.1.07.tiff'


- name: Ensure Yoda licenses directory is present
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    imkdir /{{ irods_zone }}/yoda/licenses
  ignore_errors: true


- name: Ensure licenses are present in Yoda
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    iput -f '/etc/irods/irods-ruleset-uu/licenses/{{ item }}' '/{{ irods_zone }}/yoda/licenses/{{ item }}'
  with_items:
    - "Creative Commons Attribution 4.0 International Public License.txt"
    - "Creative Commons Attribution 4.0 International Public License.uri"
    - "Creative Commons Attribution-ShareAlike 4.0 International Public License.txt"
    - "Creative Commons Attribution-ShareAlike 4.0 International Public License.uri"
    - "Open Data Commons Attribution License (ODC-By) v1.0.txt"
    - "Open Data Commons Attribution License (ODC-By) v1.0.uri"


- name: Ensure Yoda preservable file formats directory is present
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    imkdir /{{ irods_zone }}/yoda/file_formats
  ignore_errors: true


- name: Ensure preservable file formats are present in Yoda
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    iput -f '/etc/irods/irods-ruleset-uu/file_formats//{{ item }}' '/{{ irods_zone }}/yoda/file_formats/{{ item }}'
  with_items:
    - "DANS.json"
    - "4TU.json"


- name: Ensure Yoda templates directory is present
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    imkdir /{{ irods_zone }}/yoda/templates
  ignore_errors: true


- name: Ensure intake module cronjob rules are present
  become_user: '{{ irods_service_account }}'
  become: yes
  copy:
    src: '{{ item }}'
    dest: '~/.irods/{{ item }}'
    mode: 0644
  with_items:
    - 'job_movetovault.r'
    - 'job_checksums.r'


- name: Configure cronjob to move grp-intake-* datapackages to the grp-vault-*
  become_user: '{{ irods_service_account }}'
  become: yes
  cron:
    name: 'job_movetovault.r'
    minute: '*/5'
    job: '/bin/irule -F /var/lib/irods/.irods/job_movetovault.r >> /var/lib/irods/log/job_movetovault.log 2>&1'


- name: Configure cronjob to make checksums of datapackages in grp-vault-*
  become_user: '{{ irods_service_account }}'
  become: yes
  cron:
    name: 'job_checksums.r'
    minute: '*/5'
    job: '/bin/irule -F /var/lib/irods/.irods/job_checksums.r >> /var/lib/irods/log/job_checksums.log 2>&1'


- name: Run monthly storage statistics job
  become_user: '{{ irods_service_account }}'
  become: yes
  command:
    irule -F /etc/irods/irods-ruleset-uu/tools/monthly-storage-statistics.r
  ignore_errors: true
