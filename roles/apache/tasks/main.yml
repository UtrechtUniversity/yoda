---
# copyright Utrecht University

- name: Include OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"


- name: Ensure Apache webserver is installed
  ansible.builtin.package:
    name:
      - "{{ apache_main_package }}"
      - "{{ apache_dev_package }}"
      - "{{ apache_openssl_package }}"
    state: present


- name: Ensure Apache ModSSL is installed
  ansible.builtin.package:
    name: mod_ssl
    state: present
  when: ansible_os_family == 'RedHat'


- name: Allow public to ports for Apache in firewall
  ansible.posix.firewalld:
    port: '{{ item }}'
    permanent: true
    state: enabled
    immediate: true
  with_items:
    - 80/tcp
    - 443/tcp
  notify: Restart firewall


- name: Ensure customized httpd config is present
  ansible.builtin.template:
    src: '{{ apache_main_config_template }}'
    dest: '{{ apache_main_config_file }}'
    mode: '0600'
  notify: Restart Apache webserver


- name: Ensure customized SSL config is present
  ansible.builtin.template:
    src: '{{ apache_ssl_config_template }}'
    dest: '{{ apache_ssl_config_file }}'
    mode: '0600'
  notify: Restart Apache webserver


- name: Ensure autoindex.conf is absent
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  notify: Restart Apache webserver
  with_items:
    - /etc/httpd/conf.d/autoindex.conf
  when: ansible_os_family == 'RedHat'


- name: Ensure unused Apache configurations are removed
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  notify: Restart Apache webserver
  with_items:
    - /etc/httpd/conf.modules.d/00-lua.conf
    - /etc/httpd/conf.modules.d/01-cgi.conf
    - /etc/httpd/conf.modules.d/15-php.conf
  when: ansible_os_family == 'RedHat'


- name: Ensure Apache modules used by Yoda are enabled (Ubuntu)
  ansible.builtin.file:
    src: "/etc/apache2/mods-available/{{ item }}.load"
    dest: "/etc/apache2/mods-enabled/{{ item }}.load"
    state: link
  notify: Restart Apache webserver
  with_items:
    - headers
    - ssl
  when: ansible_os_family == 'Debian'


- name: Configure Apache apparmor profile
  ansible.builtin.template:
    src: usr.sbin.apache2.j2
    dest: /etc/apparmor.d/usr.sbin.apache2
    owner: root
    group: root
    mode: '0644'
  when: ansible_os_family == 'Debian' and enable_apparmor


- name: Put Apache in AppArmor enforce mode
  ansible.builtin.shell: |
    aa-enforce /usr/sbin/apache2
    apparmor_parser -r /etc/apparmor.d/usr.sbin.apache2
  notify: Restart Apache webserver
  changed_when: true
  when: ansible_os_family == 'Debian' and enable_apparmor


- name: Ensure Apache service is configured
  ansible.builtin.service:
    name: "{{ apache_service_name }}"
    state: started
    enabled: '{{ yoda_enable_httpd }}'
