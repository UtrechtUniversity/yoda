---
# copyright Utrecht University

- name: Ensure yodadeployment user exists
  ansible.builtin.user:
    name: "{{ yoda_deployment_user }}"


- name: Ensure yodadeployment has access to /var/www/yoda
  ansible.builtin.file:
    path: /var/www/yoda
    state: directory
    owner: "{{ yoda_deployment_user }}"
    group: "{{ yoda_deployment_user }}"
    mode: 0711


- name: Check for presence of .git directory
  become_user: "{{ yoda_deployment_user }}"
  become: true
  ansible.builtin.stat:
    path: /var/www/yoda/.git
  register: git


- name: Checkout Yoda portal in temporary location
  become_user: "{{ yoda_deployment_user }}"
  become: true
  ansible.builtin.git:
    repo: "https://github.com/UtrechtUniversity/yoda-portal.git"
    dest: "/var/www/yoda/git"
  when: not git.stat.exists
  

- name: Move Yoda portal repository to the correct location
  become_user: "{{ yoda_deployment_user }}"
  become: true
  command: mv "/var/www/yoda/git/.git" "/var/www/yoda/.git"
  when: not git.stat.exists


- name: Delete legacy portal files
  become_user: "{{ yoda_deployment_user }}"
  become: true
  ansible.builtin.file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "/var/www/yoda/public"
    - "/var/www/yoda/yoda-portal"
    - "/var/www/yoda/irods-php"
    - "/var/www/yoda/CodeIgniter"
    - "/var/www/yoda/git"
  when: not git.stat.exists


- name: Checkout Yoda portal
  become_user: "{{ yoda_deployment_user }}"
  become: true
  ansible.builtin.git:
    repo: "https://github.com/UtrechtUniversity/yoda-portal.git"
    dest: "/var/www/yoda"
    version: "{{ yoda_portal_version }}"
    force: "yes"
  register: portalchanges


- name: Ensure Yoda portal virtualenv exists
  become_user: "{{ yoda_deployment_user }}"
  become: true
  ansible.builtin.command: python3 -m virtualenv "/var/www/yoda/venv"
  args:
    creates: /var/www/yoda/venv


- name: Ensure Yoda portal dependencies are installed
  become_user: "{{ yoda_deployment_user }}"
  become: true
  ansible.builtin.pip:
    requirements: /var/www/yoda/requirements.txt
    virtualenv: '/var/www/yoda/venv'
    virtualenv_python: python3.6
  notify: Restart Apache webserver


- name: Install mod-wsgi
  become_user: "root"
  become: true
  ansible.builtin.shell: |
    source /var/www/yoda/venv/bin/activate
    mod_wsgi-express install-module > /etc/httpd/conf.modules.d/02-wsgi.conf
    exit
  args:
    creates: /etc/httpd/conf.modules.d/02-wsgi.conf


- name: Generate Flask secret key
  ansible.builtin.shell: openssl rand -base64 32 > /var/www/yoda/flask_secret_key
    creates=/var/www/yoda/flask_secret_key
  when: not ansible_check_mode


- name: Retrieve Flask secret key
  ansible.builtin.slurp:
    src: /var/www/yoda/flask_secret_key
  register: secret_key
  when: not ansible_check_mode


- name: Store Flask secret key in variable
  ansible.builtin.set_fact:
    flask_secret_key: "{{ secret_key['content'] }}"
  when: not ansible_check_mode


- name: Copy Yoda Portal config for Flask
  become_user: "{{ yoda_deployment_user }}"
  become: true
  ansible.builtin.template:
    src: "flask.cfg.j2"
    dest: "/var/www/yoda/flask.cfg"
    mode: '0644'
  when: not ansible_check_mode
  notify: Restart Apache webserver


- name: Copy Yoda Portal virtual host config for Apache
  ansible.builtin.template:
    src: "yoda-portal-vhost.conf.j2"
    dest: "/etc/httpd/conf.d/yoda-portal-vhost.conf"
    mode: '0644'
  notify: Restart Apache webserver


- name: Set SELinux context for shared libraries
  sefcontext:
    target: '/var/www/yoda/venv/.*\.so(\..*)?'
    setype: httpd_sys_script_exec_t
    state: present
  register: filescontext
  when: ansible_selinux.status == "enabled"


- name: Ensure selinux context is enforced on shared libraries
  ansible.builtin.command: 'restorecon -r /var/www/yoda/venv'
  when: ansible_selinux.status == "enabled"


- name: Allow Flask to connect to OpenSearch
  seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true
  when: ansible_selinux.status == "enabled" and enable_open_search


- include_tasks: setup-development-environment.yml
  when: yoda_environment == "development"
