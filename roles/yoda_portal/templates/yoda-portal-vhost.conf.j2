# {{ ansible_managed }}
# yoda-portal-vhost.conf

<VirtualHost *:80>
    DocumentRoot "/var/www/yoda/public"
    ServerName {{ yoda_portal_fqdn }}

    # Always redirect to https.
    Redirect / https://{{ yoda_portal_fqdn }}/
</VirtualHost>

<VirtualHost *:443>
    DocumentRoot "/var/www/yoda/public"
    ServerName {{ yoda_portal_fqdn }}
    <Directory /var/www/yoda>
        AllowOverride All
        Require all granted
    </Directory>

    # intermediate TLS configuration
    SSLEngine               on
    SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite          ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    SSLHonorCipherOrder     off
    SSLCompression          off

    # Logging of access to portal
    SetEnvIf Remote_Addr "127\.0\.0\.1" dontlog
    SetEnvIf Request_URI "favicon\.ico$" dontlog
    SetEnvIf Request_URI "\.woff$" dontlog
    SetEnvIf Request_URI "\.woff2$" dontlog
    SetEnvIf Request_Method "^OPTIONS$" dontlog
    CustomLog /var/log/httpd/portal_access.log common env=!dontlog

    # HSTS (mod_headers is required) (31536000 seconds = 1 year)
    Header always set Strict-Transport-Security "max-age=31536000"

    #   Server Certificate:
    #   Point SSLCertificateFile at a PEM encoded certificate.  If
    #   the certificate is encrypted, then you will be prompted for a
    #   pass phrase.  Note that a kill -HUP will prompt again.  A new
    #   certificate can be generated using the genkey(1) command.
    SSLCertificateFile      {{ openssl_certs_dir }}/{{ openssl_crt_signed_and_chain }}

    #   Server Private Key:
    #   If the key is not combined with the certificate, use this
    #   directive to point at the key file.  Keep in mind that if
    #   you've both a RSA and a DSA private key you can configure
    #   both in parallel (to also allow the use of DSA ciphers, etc.)
    SSLCertificateKeyFile   {{ openssl_private_dir }}/{{ openssl_key_signed }}
</VirtualHost>
