---
# copyright Utrecht University

- name: Download OpenSearch
  ansible.builtin.get_url:
    url: '{{ opensearch.url }}/{{ opensearch.filename }}'
    dest: '{{ dest_dir }}/{{ opensearch.filename }}'
    checksum: '{{ opensearch.checksum }}'
    mode: 0644


- name: Create OpenSearch user
  ansible.builtin.user:
    name: '{{ opensearch.user }}'
    state: present
    shell: /bin/bash


- name: Install OpenSearch
  ansible.builtin.unarchive:
    src: '{{ dest_dir }}/{{ opensearch.filename }}'
    dest: /usr/share
    creates: '{{ opensearch.home }}'
    remote_src: true
    extra_opts:
      - --transform
      - 's/^opensearch-{{ opensearch.version }}/opensearch/'


- name: Disable plugins
  ansible.builtin.command: creates='{{ opensearch.plugins }}.disabled' mv '{{ opensearch.plugins }}' '{{ opensearch.plugins }}.disabled'


- name: Create empty plugins directory
  ansible.builtin.file:
    path: '{{ opensearch.plugins }}'
    mode: 0755
    owner: '{{ opensearch.user }}'
    group: '{{ opensearch.user }}'
    state: directory


- name: Install configuration file
  ansible.builtin.template:
    src: opensearch.yml
    dest: '{{ opensearch.config }}/opensearch.yml'
    owner: '{{ opensearch.user }}'
    group: '{{ opensearch.user }}'
    mode: 0600
    backup: true


- name: Install jvm.options
  ansible.builtin.template:
    src: jvm.options
    dest: '{{ opensearch.config }}/jvm.options'
    owner: '{{ opensearch.user }}'
    group: '{{ opensearch.user }}'
    mode: 0600
    force: true


- name: Set vm.max_map_count in sysctl.conf
  sysctl:
    name: vm.max_map_count
    value: '262144'
    state: present


- name: Create systemd service
  ansible.builtin.template:
    src: opensearch.service
    dest: '{{ systemd_dir }}/opensearch.service'
    mode: 0644


- name: Make sure OpenSearch is started
  ansible.builtin.service:
    name: opensearch
    state: started
    enabled: true


- name: Enable port for indexing
  firewalld:
    port: 9200/tcp
    permanent: true
    state: enabled
    immediate: true
  notify: Restart firewall


- name: Discover presence of index
  ansible.builtin.uri:
    url: "http://{{ opensearch_server }}:9200/yoda"
    method: GET
    status_code: 200, 404
  register: present
  until: present is succeeded
  retries: 10
  delay: 5


- name: Install initial index
  ansible.builtin.uri:
    url: "http://{{ opensearch_server }}:9200/yoda"
    method: PUT
    body: "{{ lookup('file', 'index.json') }}"
    status_code: 200
    body_format: json
  when: not ansible_check_mode and present.status == 404
