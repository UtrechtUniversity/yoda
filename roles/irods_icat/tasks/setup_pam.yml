---
# copyright Utrecht University

- name: Include OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"


- name: Ensure pam_radius is absent
  ansible.builtin.package:
    name: '{{ pam_radius_package }}'
    state: absent


- name: Ensure deprecated RADIUS fallback is not  is configured
  ansible.builtin.file:
    path: /etc/pam_radius.conf
    state: absent


- name: Ensure external user check is present
  ansible.builtin.template:
    src: is-user-external.sh.j2
    dest: /usr/local/bin/is-user-external.sh
    owner: root
    group: "{{ irods_service_account }}"
    mode: '0750'
  when: external_users


- name: Ensure external user authentication is present
  ansible.builtin.template:
    src: external-auth.py.j2
    dest: /usr/local/bin/external-auth.py
    owner: root
    group: "{{ irods_service_account }}"
    mode: '0750'
  no_log: true
  when: external_users


# When data access tokens are enabled, pysqlcipher3 needs to be
# installed globally too for the token authentication script
# (in addition to the user-level installation for the ruleset).
- name: Ensure pysqlcipher3 is installed globally for token authentication script
  ansible.builtin.pip:
    name: pysqlcipher3==1.0.4
    executable: "{{ irods_icat_pip2_path }}"
    state: present
  when: enable_tokens and ansible_os_family == 'RedHat'


- name: Check installed version of pysqlcipher3
  ansible.builtin.shell: "{{ irods_icat_pip2_path }} show pysqlcipher3 | grep Version | cut -d ' ' -f 2"
  ignore_errors: true
  changed_when: false
  register: pysqlcipher3_version
  when: enable_tokens and ansible_os_family == 'Debian'


- name: Ensure PyPi build of pysqlcipher3 is absent
  ansible.builtin.pip:
    name: pysqlcipher3==1.0.4
    executable: "{{ irods_icat_pip2_path }}"
    state: absent
  when: enable_tokens and ansible_os_family == 'Debian' and '1.0.4' in pysqlcipher3_version.stdout


- name: Ensure custom build of pysqlcipher3 is installed globally for token authentication script
  ansible.builtin.command: # noqa no-changed-when
    cmd: python2 -m easy_install https://github.com/UtrechtUniversity/pysqlcipher3/releases/download/v1.2.1/pysqlcipher3-1.2.1-py2.7-linux-x86_64.egg
  when: enable_tokens and ansible_os_family == 'Debian' and '1.2.1' not in pysqlcipher3_version.stdout


- name: Ensure token authentication script is present
  ansible.builtin.template:
    src: token-auth.py.j2
    dest: /usr/local/bin/token-auth.py
    owner: root
    group: "{{ irods_service_account }}"
    mode: '0750'
  no_log: true
  when: enable_tokens


- name: Ensure /etc/pam.d/irods is configured
  ansible.builtin.template:
    src: 'irods_pam.j2'
    dest: '/etc/pam.d/irods'
    mode: '0644'


- name: Ensure OIDC authentication is present
  become_user: '{{ irods_service_account }}'
  become: true
  when: oidc_active is defined and oidc_active is sameas true
  ansible.builtin.template:
    src: oidc.py.j2
    dest: /var/lib/irods/msiExecCmd_bin/oidc.py
    owner: "{{ irods_service_account }}"
    group: "{{ irods_service_account }}"
    mode: '0644'


- name: Ensure correct file ownership and mode on PamAuthCheck
  ansible.builtin.file:
    path: /usr/sbin/irodsPamAuthCheck
    owner: root
    group: root
    mode: '04755'
  when: not ansible_check_mode
