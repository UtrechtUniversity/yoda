---
# copyright Utrecht University

- name: Ensure PAM radius is absent
  ansible.builtin.package:
    name: pam_radius
    state: absent


- name: Ensure external user check is present
  ansible.builtin.template:
    src: is-user-external.sh.j2
    dest: /usr/local/bin/is-user-external.sh
    owner: root
    group: irods
    mode: 0750
  when: external_users


- name: Ensure external user authentication is present
  ansible.builtin.template:
    src: external-auth.py.j2
    dest: /usr/local/bin/external-auth.py
    owner: root
    group: irods
    mode: 0750
  when: external_users


- name: Download sqlcipher rpms
  ansible.builtin.get_url:
    url: '{{ item.url }}/{{ item.filename }}'
    dest: '{{ rpm_dest_dir }}/{{ item.filename }}'
    checksum: '{{ item.checksum }}'
    mode: 0644
  with_items:
    - { 'url': '{{ sqlcipher.url }}', 'filename': '{{ sqlcipher.filename }}', 'checksum': '{{ sqlcipher.checksum }}' }
    - { 'url': '{{ sqlcipher_dev.url }}', 'filename': '{{ sqlcipher_dev.filename }}', 'checksum': '{{ sqlcipher_dev.checksum }}' }
  when: enable_tokens


- name: Install sqlcipher from downloaded rpms
  ansible.builtin.package:
    name: '{{ rpm_dest_dir }}/{{ item }}'
    state: present
  with_items:
    - '{{ sqlcipher.filename }}'
    - '{{ sqlcipher_dev.filename }}'
  when: enable_tokens


- name: Ensure Python dependencies are installed
  package:
    name:
      - python-pip
    state: present
  when: enable_tokens


- name: Ensure pysqlcipher3 is installed
  pip:
    name:
      - pysqlcipher3==1.0.4
    state: present
  when: enable_tokens


- name: Ensure token authentication is present
  ansible.builtin.template:
    src: token-auth.py.j2
    dest: /usr/local/bin/token-auth.py
    owner: root
    group: irods
    mode: 0750
  when: enable_tokens


- name: Ensure /etc/pam.d/irods is configured
  ansible.builtin.template:
    src: 'irods_pam.j2'
    dest: '/etc/pam.d/irods'
    mode: '0644'


- name: Ensure deprecated /etc/pam_radius.conf is removed
  ansible.builtin.file:
    path: /etc/pam_radius.conf
    state: absent


- name: Ensure OIDC authentication is present
  become_user: '{{ irods_service_account }}'
  become: yes
  when: oidc_active is defined and oidc_active is sameas true
  ansible.builtin.template:
    src: oidc.py.j2
    dest: /var/lib/irods/msiExecCmd_bin/oidc.py
    owner: irods
    group: irods
    mode: 0644


- name: Ensure correct file ownership and mode on PamAuthCheck
  ansible.builtin.file:
    path: /usr/sbin/irodsPamAuthCheck
    owner: root
    group: root
    mode: 04755
  when: not ansible_check_mode
