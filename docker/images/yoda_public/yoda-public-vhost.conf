# yoda-public-vhost.conf

<VirtualHost *:80>
    ServerName public.yoda
    DocumentRoot /var/www/landingpages
    # Always redirect to https.
    Redirect / https://public.yoda/
</VirtualHost>

<VirtualHost *:443>
    DocumentRoot  /var/www/landingpages
    ServerName public.yoda
    <Directory /var/www/landingpages>
        AllowOverride All
        Require all granted
    </Directory>

    WSGIDaemonProcess moai user=yodadeployment group=yodadeployment threads=5 python-home=/var/www/moai/yoda-moai/venv
    WSGIProcessGroup moai
    WSGIScriptAlias /oai /var/www/moai/moai.wsgi
    WSGIScriptReloading On

    <Directory /var/www/moai>
        AllowOverride All
        Require all granted
    </Directory>

    # intermediate TLS configuration
    SSLEngine               on
    SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite          ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    SSLHonorCipherOrder     off
    SSLCompression          off

    #   Server Certificate:
    #   Point SSLCertificateFile at a PEM encoded certificate.  If
    #   the certificate is encrypted, then you will be prompted for a
    #   pass phrase.  Note that a kill -HUP will prompt again.  A new
    #   certificate can be generated using the genkey(1) command.
    SSLCertificateFile      /etc/pki/tls/certs/localhost_and_chain.crt

    #   Server Private Key:
    #   If the key is not combined with the certificate, use this
    #   directive to point at the key file.  Keep in mind that if
    #   you've both a RSA and a DSA private key you can configure
    #   both in parallel (to also allow the use of DSA ciphers, etc.)
    SSLCertificateKeyFile   /etc/pki/tls/private/localhost.key
</VirtualHost>
